@page "/almacen"
@inject HttpClient httpClient

<div class="card">
    <div class="card">

        <div class="card-header">
            <h3> Almac&eacute;n de Productos  </h3>
        </div>

        @if (Productos is not null)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ProductoId</th>
                        <th>Descripci&oacute;n</th>
                        <th>Existencia</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var Productos in Productos)
                    {
                        <tr>
                            <td>@Productos.ProductoId</td>
                            <td>@Productos.Descripcion</td>
                            <td>@Productos.Existencia</td>
                        </tr>
                    }

                </tbody>

            </table>
        }
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {
    public List<Productos>? Productos { get; set; }
    public int conteo { get; set; }
    public string? filtro { get; set; }
    public string? Criterio { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Buscar();
    }

    public async Task Buscar()
    {
        Productos = await httpClient.GetFromJsonAsync<List<Productos>>($"api/Productos");

        conteo = Productos != null ? Productos!.Count() : 0;
        StateHasChanged();
    }
}
